import{_ as a,c as i,o as t,ag as s}from"./chunks/framework.B-XtCDNB.js";const c=JSON.parse('{"title":"2. Environment Setup","description":"","frontmatter":{},"headers":[],"relativePath":"contributor-guide/compiler-guide/02-00-environment-setup.md","filePath":"contributor-guide/compiler-guide/02-00-environment-setup.md","lastUpdated":1760471362000}'),l={name:"contributor-guide/compiler-guide/02-00-environment-setup.md"};function n(o,e,r,p,d,m){return t(),i("div",null,[...e[0]||(e[0]=[s(`<h1 id="_2-environment-setup" tabindex="-1">2. Environment Setup <a class="header-anchor" href="#_2-environment-setup" aria-label="Permalink to &quot;2. Environment Setup&quot;">​</a></h1><h2 id="_2-1-compiling-from-the-source-repository" tabindex="-1">2.1. Compiling from the Source Repository <a class="header-anchor" href="#_2-1-compiling-from-the-source-repository" aria-label="Permalink to &quot;2.1. Compiling from the Source Repository&quot;">​</a></h2><p>The <a href="https://gitlab.gnome.org/GNOME/vala/blob/master/README.md" target="_blank" rel="noreferrer">Vala README.md</a> file contains full and up to date instructions on how to download and compile Vala from the git repository.</p><h2 id="_2-2-setting-up-your-editor" tabindex="-1">2.2. Setting up your editor <a class="header-anchor" href="#_2-2-setting-up-your-editor" aria-label="Permalink to &quot;2.2. Setting up your editor&quot;">​</a></h2><p>A <a href="./../../tooling/code-editors-and-ides.html">list of IDE(s)</a> with Vala support is available.</p><p>Vala support is available also for <a href="./../../tooling/build-systems.html">build tools and editors</a>.</p><h2 id="_2-3-files" tabindex="-1">2.3. Files <a class="header-anchor" href="#_2-3-files" aria-label="Permalink to &quot;2.3. Files&quot;">​</a></h2><p>Vala source files are named in the GTK+ style, i.e. all lowercase, with no separators between words, in the format namespaceclassname.vala. For example, the filename for Vala.FormalParameter is valaformalparameter.vala.</p><p>For the Vala compiler and library there is only one namespace, and it is called &quot;Vala&quot;. Don&#39;t put &quot;using Vala;&quot;; instead qualify the name of types you declare. For example &quot;class Vala.FormalParameter : Symbol&quot;.</p><h2 id="_2-4-coding-style" tabindex="-1">2.4. Coding Style <a class="header-anchor" href="#_2-4-coding-style" aria-label="Permalink to &quot;2.4. Coding Style&quot;">​</a></h2><p>The coding style used in Vala itself seems to be a variation of the GTK+ coding style.</p><ul><li>Tabs rather than spaces.</li><li>Tab width unspecified, but 4 works well.</li><li>Hanging braces.</li><li>Cuddled else.</li><li>Braces necessary for single-line blocks.</li><li>Variable and method identifiers in lowercase, words seperated by underscores.</li><li>Type identifiers in CamelCase.</li><li>Enum members and constants in ALL_CAPS, words seperated by underscores.</li><li>C-style <em>/* comments. */</em></li><li>Hungarian notation not used.</li><li>Variables are often declared with implicit type (i.e. <em>var foo = new Foo ()</em>).</li><li>No line-length limit.</li><li>No function-length limit.</li><li>Space between method name and parameters&#39; opening parenthesis.</li><li>Property <em>get</em>, <em>set</em>, <em>default</em> declaration all on one line, seperated by semicolons, if default implementations are used.</li><li>If properties have implementations, then <em>get {</em>, <em>set {</em> open new lines.</li><li>Attributes on their own line.</li><li>JavaDoc-style commenting on types, methods, variables.</li><li>Header at top of file contains:</li></ul><div class="language-vala vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vala</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* filename.vala</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> *</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * Copyright (C) 20yy-20yy  Copyright Holder &lt;email@address&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> *</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * License text.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> *</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * Author:</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> *   Programmer Name &lt;programmer@email&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> */</span></span></code></pre></div>`,13)])])}const u=a(l,[["render",n]]);export{c as __pageData,u as default};
