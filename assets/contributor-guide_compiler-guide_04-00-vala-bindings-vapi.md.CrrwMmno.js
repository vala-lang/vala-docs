import{_ as i,c as a,o as t,ag as n}from"./chunks/framework.B-XtCDNB.js";const h=JSON.parse('{"title":"4. Vala Bindings - VAPI","description":"","frontmatter":{},"headers":[],"relativePath":"contributor-guide/compiler-guide/04-00-vala-bindings-vapi.md","filePath":"contributor-guide/compiler-guide/04-00-vala-bindings-vapi.md","lastUpdated":1759843583000}'),o={name:"contributor-guide/compiler-guide/04-00-vala-bindings-vapi.md"};function r(l,e,s,c,d,p){return t(),a("div",null,[...e[0]||(e[0]=[n('<h1 id="_4-vala-bindings-vapi" tabindex="-1">4. Vala Bindings - VAPI <a class="header-anchor" href="#_4-vala-bindings-vapi" aria-label="Permalink to &quot;4. Vala Bindings - VAPI&quot;">​</a></h1><p>The bindings are located in the vapi directories. What is described below in most cases also applies to normal .vala files, but not usually necessary to newly code written in Vala. They exist for the cases when Vala&#39;s chosen values don&#39;t fit the API.</p><p>Bindings can be generated with the Vala introspection or GObject Introspection.</p><h2 id="_4-1-vala-introspection" tabindex="-1">4.1. Vala Introspection <a class="header-anchor" href="#_4-1-vala-introspection" aria-label="Permalink to &quot;4.1. Vala Introspection&quot;">​</a></h2><p>This strategy was created before the GObject Introspection. There is a process of replacing it with GObject Introspection going on.</p><ol><li>vala-gen-introspect is a program written in C (under /gobject-introspection) that will generate the .gi file from C headers.</li><li>vapigen using the Vala.GIDLParser (under /vapigen) will then construct a Vala tree from the .gi file.</li></ol><h2 id="_4-2-gobject-introspection" tabindex="-1">4.2. GObject Introspection <a class="header-anchor" href="#_4-2-gobject-introspection" aria-label="Permalink to &quot;4.2. GObject Introspection&quot;">​</a></h2><p>This will be the preferred way of generating GObject bindings at some point, deprecating the old vala introspection.</p><ol><li>Existing libraries will distribute a .gir file.</li><li>vapigen using the Vala.GirParser (under /vala) will then construct a Vala tree from the .gir file.</li></ol>',9)])])}const b=i(o,[["render",r]]);export{h as __pageData,b as default};
