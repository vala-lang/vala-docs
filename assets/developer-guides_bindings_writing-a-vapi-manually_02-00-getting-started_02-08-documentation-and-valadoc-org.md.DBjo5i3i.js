import{_ as s,c as i,o as e,ag as n}from"./chunks/framework.B-XtCDNB.js";const k=JSON.parse('{"title":"2.8. Documentation and Valadoc.org","description":"","frontmatter":{},"headers":[],"relativePath":"developer-guides/bindings/writing-a-vapi-manually/02-00-getting-started/02-08-documentation-and-valadoc-org.md","filePath":"developer-guides/bindings/writing-a-vapi-manually/02-00-getting-started/02-08-documentation-and-valadoc-org.md","lastUpdated":1759534595000}'),t={name:"developer-guides/bindings/writing-a-vapi-manually/02-00-getting-started/02-08-documentation-and-valadoc-org.md"};function l(o,a,d,p,r,h){return e(),i("div",null,[...a[0]||(a[0]=[n(`<h1 id="_2-8-documentation-and-valadoc-org" tabindex="-1">2.8. Documentation and Valadoc.org <a class="header-anchor" href="#_2-8-documentation-and-valadoc-org" aria-label="Permalink to &quot;2.8. Documentation and Valadoc.org&quot;">â€‹</a></h1><p><a href="https://valadoc.org" target="_blank" rel="noreferrer">Valadoc.org</a> is often the first website a Vala developer visits when seeking how to use a binding. A new VAPI committed to <a href="https://gitlab.gnome.org/GNOME/vala-extra-vapis" target="_blank" rel="noreferrer">Vala Extra VAPIs</a> can be added to Valadoc.org by adding the VAPI to the <a href="https://github.com/Valadoc/valadoc-org/blob/main/documentation/packages.xml" target="_blank" rel="noreferrer">list of downloaded packages</a> at Valadoc.org and submitting a pull request to the <a href="https://github.com/Valadoc/valadoc-org" target="_blank" rel="noreferrer">Valadoc.org repository</a>. See the<a href="https://github.com/Valadoc/valadoc-org/pull/39" target="_blank" rel="noreferrer">libcolumbus pull request</a> as an example.</p><p>Valadoc.org is frequently re-generated. When Valadoc.org is re-generated VAPIs are pulled in from <code>vala-extra-vapis</code> and documentation generated from them. If no documentation comments are associated with a VAPI then Valadoc.org will only show the symbols in the VAPI.</p><p>Add a documentation comment before a symbol in the VAPI. A documentation comment is a C multiline comment with an additional asterisk:</p><div class="language-vala vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vala</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * Brief description of class Foo</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> *</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * Long description of class Foo, which can include an example</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">CCode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (cname = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;foo&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, ref_function = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;foo_retain&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, unref_function = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;foo_release&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Compact</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Foo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // Details of binding</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>The comments can include additional markup. Details are at <a href="https://valadoc.org/markup" target="_blank" rel="noreferrer">Valadoc Comment Markup</a>.</p><p>The documentation can be generated locally to test how it will appear. First, download and build <code>valadoc</code>:</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> git://git.gnome.org/valadoc</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> valadoc</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">./autogen.sh</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span></span></code></pre></div><p>Second, generate the documentation:</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> my_binding_directory</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">valadoc</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --directory</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docs</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --force</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --package-name</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mybinding</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mybinding.vapi</span></span></code></pre></div><p>This will generate the HTML documentation in the <code>docs</code> directory. <code>valadoc</code> expects the <code>docs</code> directory to not exist, but <code>--force</code> overrides this. <code>--package-name mybinding</code> will create a sub-directory called <code>mybinding</code> in <code>docs</code> that contains the generated documentation for <code>mybinding.vapi</code>.</p><p>The locally generated documentation will have the same structure as <code>valadoc.org</code>, although the visual styling may differ.</p>`,12)])])}const g=s(t,[["render",l]]);export{k as __pageData,g as default};
