import{_ as n,c as e,o as t,ag as i}from"./chunks/framework.B-XtCDNB.js";const l=JSON.parse('{"title":"5. Fundamentals of Binding a C Function","description":"","frontmatter":{},"headers":[],"relativePath":"developer-guides/bindings/writing-a-vapi-manually/05-00-fundamentals-of-binding-a-c-function.md","filePath":"developer-guides/bindings/writing-a-vapi-manually/05-00-fundamentals-of-binding-a-c-function.md","lastUpdated":1759713030000}'),r={name:"developer-guides/bindings/writing-a-vapi-manually/05-00-fundamentals-of-binding-a-c-function.md"};function o(d,a,s,u,h,c){return t(),e("div",null,[...a[0]||(a[0]=[i('<h1 id="_5-fundamentals-of-binding-a-c-function" tabindex="-1">5. Fundamentals of Binding a C Function <a class="header-anchor" href="#_5-fundamentals-of-binding-a-c-function" aria-label="Permalink to &quot;5. Fundamentals of Binding a C Function&quot;">​</a></h1><p>A function signature comprises the parameters of the function and any return value.</p><h4 id="_5-1-out-and-reference-parameters-and-return-values" tabindex="-1"><a href="./05-00-fundamentals-of-binding-a-c-function/05-01-out-and-reference-parameters-and-return-values.html">5.1. Out and Reference Parameters and Return Values</a> <a class="header-anchor" href="#_5-1-out-and-reference-parameters-and-return-values" aria-label="Permalink to &quot;[5.1. Out and Reference Parameters and Return Values](05-00-fundamentals-of-binding-a-c-function/05-01-out-and-reference-parameters-and-return-values)&quot;">​</a></h4><h4 id="_5-2-ownership" tabindex="-1"><a href="./05-00-fundamentals-of-binding-a-c-function/05-02-ownership.html">5.2. Ownership</a> <a class="header-anchor" href="#_5-2-ownership" aria-label="Permalink to &quot;[5.2. Ownership](05-00-fundamentals-of-binding-a-c-function/05-02-ownership)&quot;">​</a></h4><h4 id="_5-3-nullability" tabindex="-1"><a href="./05-00-fundamentals-of-binding-a-c-function/05-03-nullability.html">5.3. Nullability</a> <a class="header-anchor" href="#_5-3-nullability" aria-label="Permalink to &quot;[5.3. Nullability](05-00-fundamentals-of-binding-a-c-function/05-03-nullability)&quot;">​</a></h4><h4 id="_5-4-static-methods" tabindex="-1"><a href="./05-00-fundamentals-of-binding-a-c-function/05-04-static-methods.html">5.4. Static Methods</a> <a class="header-anchor" href="#_5-4-static-methods" aria-label="Permalink to &quot;[5.4. Static Methods](05-00-fundamentals-of-binding-a-c-function/05-04-static-methods)&quot;">​</a></h4><h4 id="_5-5-changing-the-position-of-generated-arguments" tabindex="-1"><a href="./05-00-fundamentals-of-binding-a-c-function/05-05-changing-the-position-of-generated-arguments.html">5.5. Changing the Position of Generated Arguments</a> <a class="header-anchor" href="#_5-5-changing-the-position-of-generated-arguments" aria-label="Permalink to &quot;[5.5. Changing the Position of Generated Arguments](05-00-fundamentals-of-binding-a-c-function/05-05-changing-the-position-of-generated-arguments)&quot;">​</a></h4><h4 id="_5-6-default-values-and-changing-an-argument-s-position" tabindex="-1"><a href="./05-00-fundamentals-of-binding-a-c-function/05-06-default-values-and-changing-an-argument-s-position.html">5.6. Default Values and Changing an Argument&#39;s Position</a> <a class="header-anchor" href="#_5-6-default-values-and-changing-an-argument-s-position" aria-label="Permalink to &quot;[5.6. Default Values and Changing an Argument&#39;s Position](05-00-fundamentals-of-binding-a-c-function/05-06-default-values-and-changing-an-argument-s-position)&quot;">​</a></h4><h4 id="_5-7-adapting-a-signature-with-a-vala-wrapper" tabindex="-1"><a href="./05-00-fundamentals-of-binding-a-c-function/05-07-adapting-a-signature-with-a-vala-wrapper.html">5.7. Adapting a Signature with a Vala Wrapper</a> <a class="header-anchor" href="#_5-7-adapting-a-signature-with-a-vala-wrapper" aria-label="Permalink to &quot;[5.7. Adapting a Signature with a Vala Wrapper](05-00-fundamentals-of-binding-a-c-function/05-07-adapting-a-signature-with-a-vala-wrapper)&quot;">​</a></h4><h4 id="_5-8-variadic-arguments-a-k-a" tabindex="-1"><a href="./05-00-fundamentals-of-binding-a-c-function/05-08-variadic-arguments.html">5.8. Variadic Arguments (a.k.a. &quot;...&quot;)</a> <a class="header-anchor" href="#_5-8-variadic-arguments-a-k-a" aria-label="Permalink to &quot;[5.8. Variadic Arguments (a.k.a. &quot;...&quot;)](05-00-fundamentals-of-binding-a-c-function/05-08-variadic-arguments)&quot;">​</a></h4><h4 id="_5-9-functions-that-do-not-return" tabindex="-1"><a href="./05-00-fundamentals-of-binding-a-c-function/05-09-functions-that-do-not-return.html">5.9. Functions that Do Not Return</a> <a class="header-anchor" href="#_5-9-functions-that-do-not-return" aria-label="Permalink to &quot;[5.9. Functions that Do Not Return](05-00-fundamentals-of-binding-a-c-function/05-09-functions-that-do-not-return)&quot;">​</a></h4><h4 id="_5-10-methods-that-change-the-instance-reference" tabindex="-1"><a href="./05-00-fundamentals-of-binding-a-c-function/05-10-methods-that-change-the-instance-reference.html">5.10. Methods that Change the Instance Reference</a> <a class="header-anchor" href="#_5-10-methods-that-change-the-instance-reference" aria-label="Permalink to &quot;[5.10. Methods that Change the Instance Reference](05-00-fundamentals-of-binding-a-c-function/05-10-methods-that-change-the-instance-reference)&quot;">​</a></h4><h4 id="_5-11-methods-that-destroy-the-instance-reference" tabindex="-1"><a href="./05-00-fundamentals-of-binding-a-c-function/05-11-methods-that-destroy-the-instance-reference.html">5.11. Methods that Destroy the Instance Reference</a> <a class="header-anchor" href="#_5-11-methods-that-destroy-the-instance-reference" aria-label="Permalink to &quot;[5.11. Methods that Destroy the Instance Reference](05-00-fundamentals-of-binding-a-c-function/05-11-methods-that-destroy-the-instance-reference)&quot;">​</a></h4>',13)])])}const g=n(r,[["render",o]]);export{l as __pageData,g as default};
