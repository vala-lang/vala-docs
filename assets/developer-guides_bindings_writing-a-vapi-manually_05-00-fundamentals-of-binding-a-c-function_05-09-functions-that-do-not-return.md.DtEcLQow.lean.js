import{_ as a,c as o,o as r,j as t,a as n}from"./chunks/framework.B-XtCDNB.js";const p=JSON.parse('{"title":"5.9. Functions That Do Not Return","description":"","frontmatter":{},"headers":[],"relativePath":"developer-guides/bindings/writing-a-vapi-manually/05-00-fundamentals-of-binding-a-c-function/05-09-functions-that-do-not-return.md","filePath":"developer-guides/bindings/writing-a-vapi-manually/05-00-fundamentals-of-binding-a-c-function/05-09-functions-that-do-not-return.md","lastUpdated":1761243551000}'),i={name:"developer-guides/bindings/writing-a-vapi-manually/05-00-fundamentals-of-binding-a-c-function/05-09-functions-that-do-not-return.md"};function u(s,e,l,d,c,f){return r(),o("div",null,[...e[0]||(e[0]=[t("h1",{id:"_5-9-functions-that-do-not-return",tabindex:"-1"},[n("5.9. Functions That Do Not Return "),t("a",{class:"header-anchor",href:"#_5-9-functions-that-do-not-return","aria-label":'Permalink to "5.9. Functions That Do Not Return"'},"â€‹")],-1),t("p",null,[n("If a function will never return, the attribute "),t("code",null,"NoReturn"),n(" allows the compiler's analyzer to know that no code executed after that statement will ever be executed. This is rare, but useful for statements which call "),t("code",null,"abort"),n(" or "),t("code",null,"exit"),n(" underneath.")],-1)])])}const m=a(i,[["render",u]]);export{p as __pageData,m as default};
