import{_ as i,c as a,o as e,ag as t}from"./chunks/framework.B-XtCDNB.js";const c=JSON.parse('{"title":"6.2. Properties","description":"","frontmatter":{},"headers":[],"relativePath":"developer-guides/bindings/writing-a-vapi-manually/06-00-adding-vala-friendly-semantics/06-02-properties.md","filePath":"developer-guides/bindings/writing-a-vapi-manually/06-00-adding-vala-friendly-semantics/06-02-properties.md","lastUpdated":1759534595000}'),n={name:"developer-guides/bindings/writing-a-vapi-manually/06-00-adding-vala-friendly-semantics/06-02-properties.md"};function l(h,s,p,o,d,k){return e(),a("div",null,[...s[0]||(s[0]=[t(`<h1 id="_6-2-properties" tabindex="-1">6.2. Properties <a class="header-anchor" href="#_6-2-properties" aria-label="Permalink to &quot;6.2. Properties&quot;">â€‹</a></h1><p>Vala allows compact classes to have properties, which are syntactic sugar for get and set method pairs. Often C objects with opaque implementations will provide a collection of functions to query state about the instance. These can be converted to properties given the following:</p><ul><li>The <code>get</code> method has the signature <code>T get(I self)</code> and the set method has the signature <code>void set(I self, T val)</code>. They need not actually occur in pairs.</li><li>The <code>get</code> method does not have side effects that are not obvious to the user.</li><li>The <code>get</code> method is cheap to call.</li><li>The <code>set</code> method does not have error information being returned.</li></ul><p>Unlike most return types, the return of a get method is assumed to be unowned unless explicitly <code>owned</code>.</p><p>Consider:</p><div class="language-c vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">typedef</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> struct</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> foo Foo;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> foo_item_count</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Foo </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">f</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> foo_max_items</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Foo </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">f</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> foo_set_max_items</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Foo </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">f</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><div class="language-vala vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vala</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Foo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> item_count {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        [</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">CCode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (cname = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;foo_item_count&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">get</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> max_items {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        [</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">CCode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (cname = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;foo_max_items&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">get</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        [</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">CCode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (cname = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;foo_set_max_items&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">set</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>All the usual <code>CCode</code> attributes may be applied to <code>get;</code> and <code>set;</code> and <code>owned</code> may be applied to change the default ownership of <code>get;</code>. Note that changing the ownership of the property is the wrong thing to do unless the instance doesn&#39;t actually own the value provided to it by <code>set;</code>.</p>`,8)])])}const E=i(n,[["render",l]]);export{c as __pageData,E as default};
