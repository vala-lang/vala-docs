import{_ as s,c as a,o as t,ag as e}from"./chunks/framework.B-XtCDNB.js";const c=JSON.parse('{"title":"6.3. Collections","description":"","frontmatter":{},"headers":[],"relativePath":"developer-guides/bindings/writing-a-vapi-manually/06-00-adding-vala-friendly-semantics/06-03-collections.md","filePath":"developer-guides/bindings/writing-a-vapi-manually/06-00-adding-vala-friendly-semantics/06-03-collections.md","lastUpdated":1759713030000}'),n={name:"developer-guides/bindings/writing-a-vapi-manually/06-00-adding-vala-friendly-semantics/06-03-collections.md"};function l(h,i,p,k,d,o){return t(),a("div",null,[...i[0]||(i[0]=[e(`<h1 id="_6-3-collections" tabindex="-1">6.3. Collections <a class="header-anchor" href="#_6-3-collections" aria-label="Permalink to &quot;6.3. Collections&quot;">â€‹</a></h1><p>Vala has several standard method names that are designed to work with Vala syntaxes like <code>foreach</code>.</p><p>The <code>get ()</code> method is used by Vala to implement the square bracket indexing syntax. For example a <code>list</code> instance with a <code>get</code> method that returns a list item, <code>list.get (index)</code>, can also be written <code>list [index]</code>.</p><p>In the next example the C function signature returns an item in the collection:</p><div class="language-c vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">blkid_partition</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">blkid_partlist_get_partition</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (blkid_partlist </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">ls</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">                              int</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> n</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><p>This could be bound in the VAPI as:</p><div class="language-vala vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vala</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Compact</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">CCode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (cname = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;blkid_partlist&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ListOfPartitions</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    [</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">CCode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (cname = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;blkid_partlist_get_partition&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> unowned</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Partition</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> get</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> index);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>Note that <code>[CCode (cname = &quot;blkid_partlist_get_partition&quot;)]</code> is used to change the Vala method name <code>get</code> to the name required in C. The binding can then be used in Vala code to get an item in the collection:</p><div class="language-vala vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vala</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> partition = partitions [count];</span></span></code></pre></div><p><code>set</code> is the Vala method to replace an item in the collection. <code>set</code> must return <code>void</code>.</p><p>Both the index methods, <code>get</code> and <code>set</code>, can take as many parameters as the C function allowing for multi-dimensional indexes to be bound. With <code>set</code> in Vala the final parameter must be the new value.</p><p>By binding a <code>size</code> property in Vala to a function that returns the size of the collection in C then Vala&#39;s <code>foreach</code> keyword can be used with the collection. The <code>get</code> index method is also required. The following example continues with the !PartitionList example above. The C function signature to get the size of the list is:</p><div class="language-c vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">blkid_partlist_numof_partitions</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (blkid_partlist </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">ls</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><p>This is bound as:</p><div class="language-vala vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vala</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Compact</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">CCode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (cname = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;blkid_partlist&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ListOfPartitions</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    [</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">CCode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (cname = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;blkid_partlist_get_partition&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> unowned</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Partition</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> get</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> index);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> size { [</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">CCode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (cname = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;blkid_partlist_numof_partitions&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">get</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>Note that the CCode <code>cname</code> translation is inside the body of the property.</p><p>The binding can now be used in Vala code with <code>foreach</code>:</p><div class="language-vala vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vala</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">foreach</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> partition </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> partitions) { </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* do something with the partition */</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }</span></span></code></pre></div><p>If the collection is unowned then Vala will give an error: <code>duplicating ListOfPartitions instance, use unowned variable or explicitly invoke copy method</code>. See <a href="https://bugzilla.gnome.org/show_bug.cgi?id=661876" target="_blank" rel="noreferrer">Bug 661876</a>.</p><p>For an unowned collection a <code>for</code> loop will still work:</p><div class="language-vala vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vala</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> count = </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; count &lt; partitions.size; count++) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> partition = partitions [count];</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    /* do something with the partition */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>For container-like instances, Vala provides syntactic sugar to convert certain operations into method calls:</p><div class="language-vala vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vala</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> a </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// â†’ a.contains (x)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">a[x, y] </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// â†’ a.get (x, y)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">a[x, y] = z </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// â†’ a.set (x, y, z);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">foreach</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> a) { </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* â€¦ */</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> } </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// â†’ var x; var i = a.iterator (); while ((x = i.next_value ()) != null) { /* â€¦ */ }</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">foreach</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> a) { </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* â€¦ */</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> } </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// â†’ var i = a.iterator (); while (i.next ()) { var x = i.get (); /* â€¦ */ }</span></span></code></pre></div><p>If appropriate, providing methods that match these prototypes will allow use of the sugar.</p><p><code>contains</code> must return <code>bool</code>.</p><p>Iterators require an intermediate object to be the holder of the iteration state. That class must implement a next_value function that returns the next value or null if iteration is to stop or it may have a next method with signature <code>bool next ()</code> that moves to the next element and returns true if there is one and a method <code>T get ()</code> to retrieve the current value of the iterator. It is rare for a C program to have the interface needed to do this.</p><p>Use your best judgement in deciding whether or not to use these conventions. This is modifying the interface, but it does tend to make the resulting interface easier to use.</p>`,27)])])}const E=s(n,[["render",l]]);export{c as __pageData,E as default};
