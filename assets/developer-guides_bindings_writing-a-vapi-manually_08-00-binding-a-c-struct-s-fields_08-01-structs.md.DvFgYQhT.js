import{_ as t,c as s,o as a,ag as i}from"./chunks/framework.B-XtCDNB.js";const _=JSON.parse('{"title":"8.1. Structs","description":"","frontmatter":{},"headers":[],"relativePath":"developer-guides/bindings/writing-a-vapi-manually/08-00-binding-a-c-struct-s-fields/08-01-structs.md","filePath":"developer-guides/bindings/writing-a-vapi-manually/08-00-binding-a-c-struct-s-fields/08-01-structs.md","lastUpdated":1760471362000}'),n={name:"developer-guides/bindings/writing-a-vapi-manually/08-00-binding-a-c-struct-s-fields/08-01-structs.md"};function d(o,e,r,c,l,p){return a(),s("div",null,[...e[0]||(e[0]=[i('<h1 id="_8-1-structs" tabindex="-1">8.1. Structs <a class="header-anchor" href="#_8-1-structs" aria-label="Permalink to &quot;8.1. Structs&quot;">â€‹</a></h1><p>Any simple types (<code>int</code>s, <code>double</code>s, <code>enum</code>s, or simple types found in the same binding) can simply be bound by preceding them with <code>public</code>. This also applies to any parented structs that are not pointed to directly (i.e., they are <code>foo f;</code> not <code>foo *f;</code>)</p>',2)])])}const m=t(n,[["render",d]]);export{_ as __pageData,m as default};
