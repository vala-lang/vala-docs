import{_ as t,c as d,o,ag as a}from"./chunks/framework.B-XtCDNB.js";const f=JSON.parse('{"title":"Value Types","description":"","frontmatter":{},"headers":[],"relativePath":"developer-guides/documentation/vala-for-csharp-devs/06-value-types.md","filePath":"developer-guides/documentation/vala-for-csharp-devs/06-value-types.md","lastUpdated":1761243514000}'),i={name:"developer-guides/documentation/vala-for-csharp-devs/06-value-types.md"};function l(r,e,n,c,s,u){return o(),d("div",null,[...e[0]||(e[0]=[a('<h1 id="value-types" tabindex="-1">Value Types <a class="header-anchor" href="#value-types" aria-label="Permalink to &quot;Value Types&quot;">​</a></h1><ul><li>sizes of standard types (<code>int</code>, <code>long</code>, ...) are architecture dependent</li><li>additional Vala types <code>int8</code>, <code>int16</code>, <code>int32</code>, <code>int64</code> (signed), <code>uint8</code>, <code>uint16</code>, <code>uint32</code>, <code>uint64</code> (unsigned) with architecture independent guaranteed sizes</li><li>no <code>byte</code>, <code>sbyte</code> (use <code>uint8</code>, <code>int8</code> instead)</li><li>no <code>decimal</code></li><li>C# <code>char</code> is UCS-2, not Vala&#39;s <code>char</code>, but similar to Vala&#39;s UCS-4 <code>unichar</code></li></ul><h2 id="numeric-suffixes" tabindex="-1">Numeric Suffixes <a class="header-anchor" href="#numeric-suffixes" aria-label="Permalink to &quot;Numeric Suffixes&quot;">​</a></h2><p>Both Vala and C# support numeric suffixes and are case-insensitive. The following suffixes are supported in Vala:</p><p><strong>Integer Suffixes</strong></p><table tabindex="0"><thead><tr><th>Suffix</th><th>Type</th></tr></thead><tbody><tr><td></td><td>int</td></tr><tr><td>u</td><td>uint</td></tr><tr><td>l</td><td>long</td></tr><tr><td>ll</td><td>int64</td></tr><tr><td>ul</td><td>ulong</td></tr><tr><td>ull</td><td>uint64</td></tr></tbody></table><p><strong>Floating-point Suffixes</strong></p><table tabindex="0"><thead><tr><th>Suffix</th><th>Type</th></tr></thead><tbody><tr><td></td><td>double</td></tr><tr><td>f</td><td>float</td></tr><tr><td>d</td><td>double</td></tr></tbody></table><p>Differences between Vala and C#:</p><ul><li>Vala does not support the <code>m</code> suffix, which represents the decimal type</li><li>Vala does not support rearranging the order of the suffix <code>ul</code> to be <code>lu</code></li><li>Vala does not infer the type of <code>l</code> to be either <code>long</code> or <code>ulong</code></li><li>Vala does not infer the type of <code>u</code> to be either <code>uint</code> or <code>ulong</code></li><li>Vala does not infer the type of suffixless numbers.</li><li>C# does not have the <code>ull</code> or <code>ll</code> suffixes.</li></ul>',10)])])}const h=t(i,[["render",l]]);export{f as __pageData,h as default};
