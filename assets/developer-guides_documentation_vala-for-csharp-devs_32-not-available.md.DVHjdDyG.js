import{_ as a,c as o,o as t,ag as l}from"./chunks/framework.B-XtCDNB.js";const h=JSON.parse('{"title":"Not Available","description":"","frontmatter":{},"headers":[],"relativePath":"developer-guides/documentation/vala-for-csharp-devs/32-not-available.md","filePath":"developer-guides/documentation/vala-for-csharp-devs/32-not-available.md","lastUpdated":1759534595000}'),i={name:"developer-guides/documentation/vala-for-csharp-devs/32-not-available.md"};function r(s,e,n,d,c,p){return t(),o("div",null,[...e[0]||(e[0]=[l('<h1 id="not-available" tabindex="-1">Not Available <a class="header-anchor" href="#not-available" aria-label="Permalink to &quot;Not Available&quot;">â€‹</a></h1><ul><li>No LINQ (not planned for 1.0, maybe later) there are some [<a href="https://gitlab.com/kosmospredanie/gpseq" target="_blank" rel="noreferrer">https://gitlab.com/kosmospredanie/gpseq</a>]</li><li>No operator overloading (<a href="https://mail.gnome.org/archives/vala-list/2008-July/msg00007.html" target="_blank" rel="noreferrer">vala-list</a>)</li><li>No method or constructor overloading (use different method names / named constructors instead, as described above)</li><li>No extension methods</li><li>No constraints on generic type parameters (i.e. no <code>where</code>)</li><li>No generic delegates</li><li>No conversion operators (i.e. no <code>explicit</code> and <code>implicit</code>)</li><li>No <code>partial</code> classes and methods</li><li>No <code>sealed</code> classes (<a href="https://mail.gnome.org/archives/vala-list/2009-September/msg00325.html" target="_blank" rel="noreferrer">planned</a>)</li><li>No static classes (use nested namespaces instead. Vala supports namespace methods, they are implicitly static)</li><li>No <code>goto</code>, no labeled statements</li><li>No constructor initializers</li><li>No bounds checking for arrays (optional support planned)</li><li>No <code>checked</code>, <code>unchecked</code>, <code>fixed</code>, <code>stackalloc</code>, <code>readonly</code></li></ul>',2)])])}const v=a(i,[["render",r]]);export{h as __pageData,v as default};
