import{_ as a,c as i,o as t,ag as n}from"./chunks/framework.B-XtCDNB.js";const e="/assets/simon-says-home.-Uj-RX2q.png",l="/assets/simon-says-package.CvgPMgcG.png",p="/assets/simon-says-function.C7F54l--.png",y=JSON.parse('{"title":"1. Quick Start","description":"","frontmatter":{},"headers":[],"relativePath":"developer-guides/documentation/valadoc-guide/01-00-quick-start.md","filePath":"developer-guides/documentation/valadoc-guide/01-00-quick-start.md","lastUpdated":1759843583000}'),o={name:"developer-guides/documentation/valadoc-guide/01-00-quick-start.md"};function h(c,s,d,k,r,g){return t(),i("div",null,[...s[0]||(s[0]=[n(`<h1 id="_1-quick-start" tabindex="-1">1. Quick Start <a class="header-anchor" href="#_1-quick-start" aria-label="Permalink to &quot;1. Quick Start&quot;">​</a></h1><h2 id="_1-1-basic-usage" tabindex="-1">1.1. Basic Usage <a class="header-anchor" href="#_1-1-basic-usage" aria-label="Permalink to &quot;1.1. Basic Usage&quot;">​</a></h2><div class="warning custom-block"><p class="custom-block-title">Warning</p><p>The <code>valadoc</code> command line tool may not be bundled with your installation of the Vala. To follow this example, install the <code>valadoc</code> tool in your operating system.</p></div><p>First find an empty directory/create a new directory.</p><p>Then, in that directory, create a file called <code>lib.vala</code> with the following contents:</p><div class="language-vala vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vala</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * Make Simon say any phrase that you enter.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> *</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * Example:</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * {{{</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * public static void main (string[] args) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> *    print (simon_says (&quot;Learn Valadoc!&quot;));</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * }</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * }}}</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> *</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * Will output:&lt;&lt;BR&gt;&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * Simon says: &quot;Learn Valadoc!&quot;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> *</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * @since 1.0.0</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> string</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> simon_says</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> phrase) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">     return</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> @&quot;Simon says: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\&quot;$(phrase)\\&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }</span></span></code></pre></div><p>Generate the documentation for the code by running the following command:</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">valadoc</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --package-name=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;simon-says&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --package-version=1.0.0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -o</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docs</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> lib.vala</span></span></code></pre></div><div class="warning custom-block"><p class="custom-block-title">Warning</p><p>If you run this command more than once, you&#39;ll see the following error:</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">error:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> File</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> already</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> exists</span></span></code></pre></div><p>To avoid this issue, add the <code>--force</code> flag to the command</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">valadoc</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --force</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --package-name=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;simon-says&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --package-version=1.0.0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -o</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docs</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> lib.vala</span></span></code></pre></div><p>However, be aware that <code>--force</code> does not remove any documentation. It only adds and overwrites documentation.</p></div><p>This will generate the documentation of the code in the <code>docs</code> directory.</p><p>Open <code>docs/index.html</code> in a web browser to view the generated documentation:</p><p><img src="`+e+'" alt="Simon Says Documentation Home"></p><p>Select the &quot;simon-says&quot; package to view its contents:</p><p><img src="'+l+'" alt="Simon Says Package Documentation"></p><p>Now, you can see the <code>simon_says</code> function that you wrote in <code>lib.vala</code>. Select it to view the full documentation of the function:</p><p><img src="'+p+'" alt="Simon Says Function Documentation"></p>',16)])])}const m=a(o,[["render",h]]);export{y as __pageData,m as default};
