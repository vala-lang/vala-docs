import{_ as s,c as a,o as e,ag as t}from"./chunks/framework.B-XtCDNB.js";const k=JSON.parse('{"title":"3.1.1. Brief Description","description":"","frontmatter":{},"headers":[],"relativePath":"developer-guides/documentation/valadoc-guide/03-00-documentation-comment-markup/03-01-brief-description.md","filePath":"developer-guides/documentation/valadoc-guide/03-00-documentation-comment-markup/03-01-brief-description.md","lastUpdated":1760471362000}'),n={name:"developer-guides/documentation/valadoc-guide/03-00-documentation-comment-markup/03-01-brief-description.md"};function r(p,i,l,o,d,h){return e(),a("div",null,[...i[0]||(i[0]=[t(`<h1 id="_3-1-1-brief-description" tabindex="-1">3.1.1. Brief Description <a class="header-anchor" href="#_3-1-1-brief-description" aria-label="Permalink to &quot;3.1.1. Brief Description&quot;">​</a></h1><p>The brief description is used throughout the entire documentation as a short summary for the symbol you&#39;re documenting.</p><h2 id="_3-1-1-1-example" tabindex="-1">3.1.1.1. Example <a class="header-anchor" href="#_3-1-1-1-example" aria-label="Permalink to &quot;3.1.1.1. Example&quot;">​</a></h2><div class="language-vala vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vala</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * This function returns true</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> *</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> bool</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> always_true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> () {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div>`,4)])])}const u=s(n,[["render",r]]);export{k as __pageData,u as default};
