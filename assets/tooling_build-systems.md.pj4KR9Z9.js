import{_ as a,c as t,o as r,ag as l}from"./chunks/framework.B-XtCDNB.js";const d=JSON.parse('{"title":"Build Systems","description":"","frontmatter":{},"headers":[],"relativePath":"tooling/build-systems.md","filePath":"tooling/build-systems.md","lastUpdated":1759843583000}'),o={name:"tooling/build-systems.md"};function s(i,e,n,m,u,f){return r(),t("div",null,[...e[0]||(e[0]=[l('<h1 id="build-systems" tabindex="-1">Build Systems <a class="header-anchor" href="#build-systems" aria-label="Permalink to &quot;Build Systems&quot;">â€‹</a></h1><ul><li><a href="https://mesonbuild.com" target="_blank" rel="noreferrer">Meson</a> - a front end to the <a href="https://ninja-build.org" target="_blank" rel="noreferrer">Ninja build system</a> with <a href="https://mesonbuild.com/Vala.html" target="_blank" rel="noreferrer">Vala support</a> (The main build system for Vala)</li><li><a href="http://www.gnu.org/software/automake/manual/automake.html#Vala-Support" target="_blank" rel="noreferrer">Automake</a> - supports Vala since 1.11</li><li><a href="http://www.rastersoft.com/programas/autovala.html" target="_blank" rel="noreferrer">Autovala</a> - a program that automates the creation of CMake files for Vala projects.</li><li><a href="http://cmake.org" target="_blank" rel="noreferrer">CMake</a>: <ul><li>CMake <a href="http://github.com/jakobwesthoff/Vala_CMake" target="_blank" rel="noreferrer">macros</a> exist to support Vala. (<a href="http://westhoffswelt.de/blog/0043_build_vala_projects_with_cmake_macros.html" target="_blank" rel="noreferrer">Detailed article</a>).</li><li>An <a href="https://github.com/nemequ/gnome-cmake" target="_blank" rel="noreferrer">alternative set of CMake modules</a> that support parallel builds.</li></ul></li><li><a href="http://activey.github.io/valder/" target="_blank" rel="noreferrer">Valder</a> - build system written in Vala and C</li><li><a href="https://wiki.gnome.org/Projects/Vala/Waf" target="_blank" rel="noreferrer">Waf</a> based template project</li><li><a href="https://xmake.io" target="_blank" rel="noreferrer">xmake</a> - build system written in Lua</li></ul>',2)])])}const p=a(o,[["render",s]]);export{d as __pageData,p as default};
