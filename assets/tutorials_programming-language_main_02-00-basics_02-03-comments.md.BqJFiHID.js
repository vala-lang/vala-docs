import{_ as s,c as e,o as n,ag as t}from"./chunks/framework.B-XtCDNB.js";const h=JSON.parse('{"title":"2.3. Comments","description":"","frontmatter":{},"headers":[],"relativePath":"tutorials/programming-language/main/02-00-basics/02-03-comments.md","filePath":"tutorials/programming-language/main/02-00-basics/02-03-comments.md","lastUpdated":1761243514000}'),i={name:"tutorials/programming-language/main/02-00-basics/02-03-comments.md"};function l(o,a,m,p,c,r){return n(),e("div",null,[...a[0]||(a[0]=[t(`<h1 id="_2-3-comments" tabindex="-1">2.3. Comments <a class="header-anchor" href="#_2-3-comments" aria-label="Permalink to &quot;2.3. Comments&quot;">â€‹</a></h1><p>Vala allows comments in code in different ways.</p><div class="language-vala vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vala</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Comment continues until end of line</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* Comment lasts between delimiters */</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * Documentation comment</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> */</span></span></code></pre></div><p>These are handled in the same way as in most other languages and so need little explanation.</p><p>Documentation comments are not special to the Vala compiler, but a documentation generation tool like <a href="./../../../../developer-guides/documentation/valadoc-guide.html">Valadoc</a> will recognise them.</p>`,5)])])}const g=s(i,[["render",l]]);export{h as __pageData,g as default};
