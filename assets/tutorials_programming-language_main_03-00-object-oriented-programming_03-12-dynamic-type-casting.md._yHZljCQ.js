import{_ as i,c as s,o as e,ag as t}from"./chunks/framework.B-XtCDNB.js";const g=JSON.parse('{"title":"3.12. Dynamic Type Casting","description":"","frontmatter":{},"headers":[],"relativePath":"tutorials/programming-language/main/03-00-object-oriented-programming/03-12-dynamic-type-casting.md","filePath":"tutorials/programming-language/main/03-00-object-oriented-programming/03-12-dynamic-type-casting.md","lastUpdated":1759843583000}'),n={name:"tutorials/programming-language/main/03-00-object-oriented-programming/03-12-dynamic-type-casting.md"};function l(o,a,p,r,d,c){return e(),s("div",null,[...a[0]||(a[0]=[t('<h1 id="_3-12-dynamic-type-casting" tabindex="-1">3.12. Dynamic Type Casting <a class="header-anchor" href="#_3-12-dynamic-type-casting" aria-label="Permalink to &quot;3.12. Dynamic Type Casting&quot;">â€‹</a></h1><p>For the dynamic cast, a variable is casted by a postfix expression <code>as DesiredTypeName</code>. Vala will include a runtime type checking to ensure this casting is reasonable - if it is an illegal casting, <code>null</code> will be returned. However, this requires both the source type and the target type to be referenced class types.</p><p>For example,</p><div class="language-vala vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vala</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Button</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> b = widget </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">as</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Button</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><p>If for some reason the class of the <code>widget</code> instance is not the Button class or one of its subclasses or does not implement the Button interface, <code>b</code> will be <code>null</code>. This cast is equivalent to:</p><div class="language-vala vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vala</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Button</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> b = (widget </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">is</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Button</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) ? (</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Button</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) widget : </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div>',6)])])}const k=i(n,[["render",l]]);export{g as __pageData,k as default};
